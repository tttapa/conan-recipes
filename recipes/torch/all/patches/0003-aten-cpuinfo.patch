diff --git a/aten/src/ATen/native/quantized/cpu/qnnpack/CMakeLists.txt b/aten/src/ATen/native/quantized/cpu/qnnpack/CMakeLists.txt
index 86897fe..6513de8 100644
--- a/aten/src/ATen/native/quantized/cpu/qnnpack/CMakeLists.txt
+++ b/aten/src/ATen/native/quantized/cpu/qnnpack/CMakeLists.txt
@@ -335,93 +335,24 @@ endif()
 target_link_libraries(pytorch_qnnpack PUBLIC clog)
 
 # ---[ Configure cpuinfo
-if(NOT TARGET cpuinfo AND USE_SYSTEM_CPUINFO)
-  add_library(cpuinfo SHARED IMPORTED)
-  find_library(CPUINFO_LIBRARY cpuinfo)
-  if(NOT CPUINFO_LIBRARY)
-    message(FATAL_ERROR "Cannot find cpuinfo")
-  endif()
-  message("Found cpuinfo: ${CPUINFO_LIBRARY}")
-  set_target_properties(cpuinfo PROPERTIES IMPORTED_LOCATION "${CPUINFO_LIBRARY}")
-elseif(NOT TARGET cpuinfo)
-  set(CPUINFO_BUILD_TOOLS OFF CACHE BOOL "")
-  set(CPUINFO_BUILD_UNIT_TESTS OFF CACHE BOOL "")
-  set(CPUINFO_BUILD_MOCK_TESTS OFF CACHE BOOL "")
-  set(CPUINFO_BUILD_BENCHMARKS OFF CACHE BOOL "")
-  add_subdirectory(
-    "${CPUINFO_SOURCE_DIR}"
-    "${CONFU_DEPENDENCIES_BINARY_DIR}/cpuinfo")
-endif()
-target_link_libraries(pytorch_qnnpack PRIVATE cpuinfo)
+find_package(cpuinfo REQUIRED)
+target_link_libraries(pytorch_qnnpack PRIVATE cpuinfo::cpuinfo)
 
 # ---[ Configure pthreadpool
-if(NOT TARGET pthreadpool AND NOT USE_SYSTEM_PTHREADPOOL)
-  set(PTHREADPOOL_BUILD_TESTS OFF CACHE BOOL "")
-  set(PTHREADPOOL_BUILD_BENCHMARKS OFF CACHE BOOL "")
-  add_subdirectory(
-    "${PTHREADPOOL_SOURCE_DIR}"
-    "${CONFU_DEPENDENCIES_BINARY_DIR}/pthreadpool")
-elseif(NOT TARGET pthreadpool AND USE_SYSTEM_PTHREADPOOL)
-  add_library(pthreadpool SHARED IMPORTED)
-  find_library(PTHREADPOOL_LIBRARY pthreadpool)
-  if(NOT PTHREADPOOL_LIBRARY)
-    message(FATAL_ERROR "Cannot find pthreadpool")
-  endif()
-  message("-- Found pthreadpool: ${PTHREADPOOL_LIBRARY}")
-  set_target_properties(pthreadpool PROPERTIES
-    IMPORTED_LOCATION "${PTHREADPOOL_LIBRARY}")
-  add_library(pthreadpool_interface INTERFACE)
-endif()
-target_link_libraries(pytorch_qnnpack PUBLIC pthreadpool)
+find_package(pthreadpool REQUIRED)
+target_link_libraries(pytorch_qnnpack PUBLIC pthreadpool::pthreadpool)
 
 # ---[ Configure FXdiv
-if(NOT TARGET fxdiv AND NOT USE_SYSTEM_FXDIV)
-  set(FXDIV_BUILD_TESTS OFF CACHE BOOL "")
-  set(FXDIV_BUILD_BENCHMARKS OFF CACHE BOOL "")
-  add_subdirectory(
-    "${FXDIV_SOURCE_DIR}"
-    "${CONFU_DEPENDENCIES_BINARY_DIR}/fxdiv")
-elseif(NOT TARGET fxdiv AND USE_SYSTEM_FXDIV)
-  find_file(FXDIV_HDR fxdiv.h PATH_SUFFIXES include)
-  if(NOT FXDIV_HDR)
-    message(FATAL_ERROR "Cannot find fxdiv")
-  endif()
-  add_library(fxdiv STATIC "${FXDIV_HDR}")
-  set_property(TARGET fxdiv PROPERTY LINKER_LANGUAGE C)
-endif()
-target_link_libraries(pytorch_qnnpack PRIVATE fxdiv)
+find_package(fxdiv REQUIRED)
+target_link_libraries(pytorch_qnnpack PRIVATE fxdiv::fxdiv)
 
 # ---[ Configure psimd
-if(NOT TARGET psimd AND NOT USE_SYSTEM_PSIMD)
-  add_subdirectory(
-    "${PSIMD_SOURCE_DIR}"
-    "${CONFU_DEPENDENCIES_BINARY_DIR}/psimd")
-elseif(NOT TARGET psimd AND USE_SYSTEM_PSIMD)
-  find_file(PSIMD_HDR psimd.h PATH_SUFFIXES include)
-  if(NOT PSIMD_HDR)
-    message(FATAL_ERROR "Cannot find psimd")
-  endif()
-  add_library(psimd STATIC "${PSIMD_HDR}")
-  set_property(TARGET psimd PROPERTY LINKER_LANGUAGE C)
-endif()
-target_link_libraries(pytorch_qnnpack PRIVATE psimd)
+find_package(psimd REQUIRED)
+target_link_libraries(pytorch_qnnpack PRIVATE psimd::psimd)
 
 # ---[ Configure FP16
-if(NOT TARGET fp16 AND NOT USE_SYSTEM_FP16)
-  set(FP16_BUILD_TESTS OFF CACHE BOOL "")
-  set(FP16_BUILD_BENCHMARKS OFF CACHE BOOL "")
-  add_subdirectory(
-    "${FP16_SOURCE_DIR}"
-    "${CONFU_DEPENDENCIES_BINARY_DIR}/fp16")
-elseif(NOT TARGET fp16 AND USE_SYSTEM_FP16)
-  find_file(FP16_HDR fp16.h PATH_SUFFIXES include)
-  if(NOT FP16_HDR)
-    message(FATAL_ERROR "Cannot find fp16")
-  endif()
-  add_library(fp16 STATIC "${FP16_HDR}")
-  set_target_properties(fp16 PROPERTIES LINKER_LANGUAGE C)
-endif()
-target_link_libraries(pytorch_qnnpack PRIVATE fp16)
+find_package(fp16 REQUIRED)
+target_link_libraries(pytorch_qnnpack PRIVATE fp16::fp16)
 
 install(TARGETS pytorch_qnnpack
     LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
